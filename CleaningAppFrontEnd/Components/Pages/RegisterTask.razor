@page "/register-task"
@using CleaningApp.Application.Dtos;
@using CleaningApp.Application.Services;
@using CleaningApp.Domain.Entities
@using CleaningApp.Infrastructure.UnitOfWork
@using CleaningAppFrontEnd.Components.Dropdowns
@rendermode InteractiveServer
@inject TaskService TaskService
@inject IUnitOfWork UnitOfWork

<h3>Register Task</h3>

<EditForm FormName="RegisterTask" EditContext="editContext" OnValidSubmit="RegisterTasks">
    <DataAnnotationsValidator />

    <div>
        <label for="userId">User</label>
        <UserDropdown @bind-SelectedUserId="taskDto.UserId"/>
    </div>

    <div>
        <label for="roomId">Room</label>
        <RoomDropdown @bind-SelectedRoomId="taskDto.RoomId" />
    </div>

    <div>
        <label for="taskTypeId">Task Type</label>
        <TaskTypeDropdown @bind-SelectedTaskTypeId="taskDto.TaskTypeId"/>
    </div>

    <div>
        <label for="taskDate">Task Date</label>
        <InputDate @bind-Value="taskDto.TaskDate" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(successMessage))
{
    <p class="text-success">@successMessage</p>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

@code {
    private CleaningTaskDto taskDto = new CleaningTaskDto();
    private EditContext editContext;
    private string successMessage = string.Empty;
    private string errorMessage = string.Empty;

    protected override void OnInitialized()
    {
        editContext = new EditContext(taskDto);
    }

    private async Task RegisterTasks()
    {
        try
        {
            await TaskService.AddTaskAsync(taskDto);
            successMessage = "Task registered successfully!";
            errorMessage = string.Empty;
            taskDto = new CleaningTaskDto();
            editContext = new EditContext(taskDto); // Reset form context
        }
        catch (Exception ex)
        {
            errorMessage = "Error: " + ex.Message;
            successMessage = string.Empty;
        }
    }
}
